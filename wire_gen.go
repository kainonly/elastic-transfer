// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/weplanx/transfer/api"
	"github.com/weplanx/transfer/bootstrap"
	"github.com/weplanx/transfer/common"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func App(value *common.Values) (*grpc.Server, error) {
	logger, err := bootstrap.UseZap(value)
	if err != nil {
		return nil, err
	}
	client, err := bootstrap.UseMongoDB(value)
	if err != nil {
		return nil, err
	}
	database := bootstrap.UseDatabase(client, value)
	conn, err := bootstrap.UseNats(value)
	if err != nil {
		return nil, err
	}
	jetStreamContext, err := bootstrap.UseJetStream(conn)
	if err != nil {
		return nil, err
	}
	inject := &common.Inject{
		Values: value,
		Log:    logger,
		Mongo:  client,
		Db:     database,
		Nats:   conn,
		Js:     jetStreamContext,
	}
	server, err := api.New(inject)
	if err != nil {
		return nil, err
	}
	return server, nil
}
